{"version":3,"sources":["components/Header.js","components/List.js","components/Subheader.js","components/Chart.js","components/Filter.js","components/Button.js","App.js","serviceWorker.js","index.js"],"names":["Header","Row","Col","sm","style","margin","textAlign","color","borderBottom","paddingBottom","List","props","message","styling","columns","Subheader","italics","fontStyle","listItems","listItem","dimensionsColumns","length","push","key","fontSize","paddingLeft","metricsColumns","Chart","coreData","filters","applyFilters","onClick","console","log","Date","generatedOptions","data","filter","apply","groupByDate","_","groupBy","uniqueDates","keys","impressionsArray","clicksArray","dayEntry","totalImpressions","totalClicks","dataRow","Impressions","Clicks","groupByCampaign","groupByDatasource","chart","type","xAxis","categories","yAxis","labels","format","Highcharts","getOptions","colors","title","text","opposite","gridLineWidth","align","series","name","generateOptions","backgroundColor","borderRadius","width","padding","position","marginTop","highcharts","options","Filter","filterColumns","onChange","dataSet","useState","styleLink","document","createElement","rel","href","head","appendChild","item","genOptions","Dropdown","placeholder","fluid","multiple","selection","inputItem","inputDataSet","uniqueValues","entry","includes","newOptions","optionItem","optionRow","value","Button","App","input","Datasource","Campaign","AdGroup","selectedValues","setSelectedValues","useFilters","setUseFilters","styles","tableColumns","Object","sortedData","sortBy","sortArray","dataWithDate","row","oldDate","year","slice","month","day","dateFormatted","formatDate","metrics","inputData","inputColumns","output","col","isNumber","getMetrics","dimensions","isString","getDimensions","isDate","getDates","className","Container","e","newState","assign","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uUAIO,SAASA,IACd,OACE,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,wBACEC,MAAO,CACLC,OAAQ,WACRC,UAAW,OACXC,MAAO,UACPC,aAAc,sBACdC,cAAe,SANnB,uCCPH,SAASC,EAAKC,GACnB,OACE,4BACGA,EAAMC,QACP,0BAAMR,MAAOO,EAAME,SAAUF,EAAMG,QAAnC,MCDC,SAASC,EAAUJ,GAMxB,IALA,IAEMK,EAAU,CAAEC,UAAW,UAEvBC,EAAY,GAEZC,EAAW,EACfA,EAAWR,EAAMS,kBAAkBC,OACnCF,IAEAD,EAAUI,KACR,kBAACZ,EAAD,CACEE,QAZU,oBAaVE,QAASH,EAAMS,kBAAkBD,GACjCN,QAASG,EACTO,IAAKJ,KAKX,OACE,6BACE,kBAAClB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,yBACEC,MAAO,CACLC,OAAQ,WACRC,UAAW,OACXC,MAAO,UACPiB,SAAU,OACVhB,aAAc,sBACdC,cAAe,SAGjB,wBAAIL,MAAO,CAAEqB,YAAa,SAAWP,GACrC,uBAAGd,MAAO,CAAEoB,SAAU,SAAtB,4BACA,6FACkE,IAChE,0BAAMpB,MAAOY,GAAUL,EAAMe,eAAe,IAF9C,OAE6D,IAC3D,0BAAMtB,MAAOY,GAAUL,EAAMe,eAAe,IAH9C,aAGmE,IACjE,0BAAMtB,MAAOY,GAAUL,EAAMS,kBAAkB,GAA/C,KAJF,OAIiE,IAC/D,0BAAMhB,MAAOY,GAAUL,EAAMS,kBAAkB,GAA/C,KALF,sB,wDCnCL,SAASO,EAAT,GAAuE,IAAD,EAArDC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASlB,EAAW,EAAXA,QAChEmB,QAAQC,IAAIL,EAASM,MACrBF,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GAEZ,IAAIK,EA+FN,SAAyBC,EAAMC,EAAQC,GACrC,IAAIC,EAAcC,IAAEC,QAAQL,EAAM,QAClCJ,QAAQC,IAAI,cAAeM,GAC3B,IAAIG,EAAcF,IAAEG,KAAKJ,GACzBP,QAAQC,IAAI,cAAeS,GAG3B,IAFA,IAAIE,EAAmB,GACnBC,EAAc,GACTC,EAAW,EAAGA,EAAWJ,EAAYrB,OAAQyB,IAAY,CAGhE,IAFA,IAAIC,EAAmB,EACnBC,EAAc,EAEZC,EAAU,EACdA,EAAUV,EAAYG,EAAYI,IAAWzB,OAC7C4B,IAEAjB,QAAQC,IAAI,WAAYa,EAAU,UAAWG,GAE7CF,GAEER,EAAYG,EAAYI,IAAWG,GAASC,YAC9CF,GACgBT,EAAYG,EAAYI,IAAWG,GAASE,OAE9DP,EAAiBtB,KAAKyB,GACtBF,EAAYvB,KAAK0B,GAEnBhB,QAAQC,IAAI,mBAAoBW,GAChCZ,QAAQC,IAAI,cAAeY,GAE3B,IAAIO,EAAkBZ,IAAEC,QAAQL,EAAM,YACtCJ,QAAQC,IAAI,kBAAmBmB,GAE/B,IAAIC,EAAoBb,IAAEC,QAAQL,EAAM,cAmExC,OAlEAJ,QAAQC,IAAI,oBAAqBoB,GAEjB,CACdC,MAAO,CACLC,KAAM,UAERC,MAAO,CACLC,WAAYf,GAEdgB,MAAO,CACL,CAEEC,OAAQ,CACNC,OAAQ,UAERxD,MAAO,CACLG,MAAOsD,IAAWC,aAAaC,OAAO,KAG1CC,MAAO,CACLC,KAAM,SACN7D,MAAO,CACLG,MAAOsD,IAAWC,aAAaC,OAAO,KAG1CG,UAAU,GAEZ,CAEEC,cAAe,EACfH,MAAO,CACLC,KAAM,cACN7D,MAAO,CACLG,MAAOsD,IAAWC,aAAaC,OAAO,KAG1CJ,OAAQ,CACNC,OAAQ,UACRxD,MAAO,CACLG,MAAOsD,IAAWC,aAAaC,OAAO,KAG1CG,UAAU,IAIdF,MAAO,CACLC,KAAM,cACNG,MAAO,QAETC,OAAQ,CACN,CACEC,KAAM,SAENlC,KAAMS,GAGR,CACEyB,KAAM,cACNZ,MAAO,EAEPtB,KAAMQ,KA7LW2B,CAAgB3C,GAgEvC,OA9DAI,QAAQC,IAAI,mBAAoBE,GA+D9B,6BACE,kBAAClC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,wBAAIC,MAAOS,GAAX,UAEF,kBAACX,EAAA,EAAD,CAAKC,GAAI,GACP,4BACEoD,KAAK,SACLnD,OAAK,GACHoE,gBAAiB,UACjBjE,MAAO,QACPkE,aAAc,MACdC,MAAO,OACPC,QAAS,UACTC,SAAU,OACVC,UAAW,QAPR,yBAQO,YARP,sBASI,GATJ,uBAUK,GAVL,IAaL,0BAAM9C,QAASA,GAAf,YAIN,kBAAC,IAAD,CAAiB+C,WAAYjB,IAAYkB,QAAS5C,K,aCnGjD,SAAS6C,EAAT,GAAgE,IAA9CnE,EAA6C,EAA7CA,QAASoE,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAAW,EACxBC,qBADwB,mBAG9DtE,GAH8D,UAGpD,IA8BVuE,EAAYC,SAASC,cAAc,QACzCF,EAAUG,IAAM,aAChBH,EAAUI,KACR,iEACFH,SAASI,KAAKC,YAAYN,GAO1B,IAAK,IAAIO,EAAO,EAAGA,EAAOX,EAAc5D,OAAQuE,IAAQ,CAEtD,IACMC,EAAatB,EAAgBU,EAAcW,GAAOT,GAExDrE,EAAQQ,KACN,6BACE,uBAAGlB,MAAO,CAAEE,UAAW,OAAQC,MAAO,UAAWsE,UAAW,SACzDI,EAAcW,IAEjB,kBAACE,EAAA,EAAD,aACE1F,MAAOiF,EACPU,YAAad,EAAcW,GAC3BI,OAAK,EACLC,UAAQ,EACRC,WAAS,EACTnB,QAASc,EACTX,SAAUA,GAPZ,QAQS,CAAEL,UAAW,WAQ5B,OACE,6BACE,wBAAIzE,MAAOS,GAAX,WACCC,GAQP,SAASyD,EAAgB4B,EAAWC,GAElC,IADA,IAAIC,EAAe,GACVC,EAAQ,EAAGA,EAAQF,EAAa/E,OAAQiF,IAC1CD,EAAaE,SAASH,EAAaE,GAAOH,KAC7CE,EAAa/E,KAAK8E,EAAaE,GAAOH,IAK1C,IADA,IAAIK,EAAa,GACRC,EAAa,EAAGA,EAAaJ,EAAahF,OAAQoF,IAAc,CACvE,IAAIC,EAAY,CACdnF,IAAK8E,EAAaI,GAClBxC,KAAMoC,EAAaI,GACnBE,MAAON,EAAaI,IAEtBD,EAAWlF,KAAKoF,GAIlB,OAAOF,E,OCpGF,SAASI,EAAT,GAA8B,IAAZ7E,EAAW,EAAXA,QACvB,OACE,4BACEwB,KAAK,SACLnD,MAAO,CACLoE,gBAAiB,UACjBjE,MAAO,QACPkE,aAAc,MACdC,MAAO,OACPC,QAAS,UACTC,SAAU,OACVC,UAAW,SAGb,0BAAM9C,QAASA,GAAf,UC+OS8E,MAnPf,WAAgB,IAsRIC,EAtRL,EACW1B,mBAAS,CAC/B,CACElD,KAAM,aACN6E,WAAY,eACZC,SAAU,WACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,MAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,WACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,MAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,WACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,MAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,gCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,QAEf,CACEhB,KAAM,aACN6E,WAAY,iBACZC,SAAU,cACVC,QAAS,IACT9D,OAAQ,EACRD,YAAa,KAEf,CACEhB,KAAM,aACN6E,WAAY,iBACZC,SAAU,uCACVC,QAAS,IACT9D,OAAQ,GACRD,YAAa,OAEf,CACEhB,KAAM,aACN6E,WAAY,iBACZC,SAAU,uCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,OAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,gCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,QAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,gCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,QAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,gCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,QAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,gCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,QAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,gCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,QAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,gCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,QAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,gCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,QAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,gCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,QAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,gCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,QAEf,CACEhB,KAAM,aACN6E,WAAY,eACZC,SAAU,gCACVC,QAAS,IACT9D,OAAQ,IACRD,YAAa,UAxIJ,mBACNd,EADM,aA2IyBgD,mBAAS,KA3IlC,gCA8I+BA,mBAAS,KA9IxC,mBA8IN8B,EA9IM,KA8IUC,EA9IV,OA+IuB/B,oBAAS,GA/IhC,mBA+INgC,EA/IM,KA+IMC,EA/IN,KAiJPC,EAAS,CACbjH,OAAQ,WACRC,UAAW,OACXC,MAAO,WAKHgH,GA6HYT,EA7Hc1E,EA8HjBoF,OAAO7E,KAAKmE,EAAM,KAxH3BW,EAkHR,SAAmBX,GAEjB,OADetE,IAAEkF,OAAOZ,EAAO,CAAC,OAAQ,eAnHrBa,CAsFrB,SAAoBb,GAElB,IADA,IAAMc,EAAe,GACZC,EAAM,EAAGA,EAAMf,EAAMzF,OAAQwG,IAAO,CAC3C,IAAMvB,EAAK,eAAQQ,EAAMe,IAEnBC,EAAUhB,EAAMe,GAAK3F,KAErB6F,EAAOD,EAAQE,MAAM,EAAG,IAExBC,EAAQH,EAAQE,MAAM,EAAG,GAEzBE,EAAMJ,EAAQE,MAAM,EAAG,GAIvBG,EAAgB,IAAIjG,KAFV6F,EAAO,IAAME,EAAQ,IAAMC,GAI3C5B,EAAMpE,KAAOiG,EAEbP,EAAatG,KAAKgF,GAMpB,OAAOsB,EAjHoBQ,CAAWhG,IAKhCiG,EAoJR,SAAoBC,EAAWC,GAE7B,IADA,IAAMC,EAAS,GACN5C,EAAO,EAAGA,EAAO2C,EAAalH,OAAQuE,IAAQ,CAErD,IAAM6C,EAAMF,EAAa3C,GAGrBpD,IAAEkG,SAASJ,EAAU,GAAGG,KAC1BD,EAAOlH,KAAKmH,GAGhB,OAAOD,EA/JSG,CAAWlB,EAAYF,GAEjCqB,EAuHR,SAAuBN,EAAWC,GAEhC,IADA,IAAMC,EAAS,GACN5C,EAAO,EAAGA,EAAO2C,EAAalH,OAAQuE,IAAQ,CAErD,IAAM6C,EAAMF,EAAa3C,GAGrBpD,IAAEqG,SAASP,EAAU,GAAGG,KAC1BD,EAAOlH,KAAKmH,GAGhB,OAAOD,EAlIYM,CAAcrB,EAAYF,GA+C7C,OAqFF,SAAkBe,EAAWC,GAE3B,IADA,IAAMC,EAAS,GACN5C,EAAO,EAAGA,EAAO2C,EAAalH,OAAQuE,IAAQ,CAErD,IAAM6C,EAAMF,EAAa3C,GAGrBpD,IAAEuG,OAAOT,EAAU,GAAGG,KACxBD,EAAOlH,KAAKmH,IA1IFO,CAASvB,EAAYF,GAqCjCE,EAAW,GAAGvF,KACduF,EAAW,GAAGvF,KACduF,EAAW,GAAGvF,KACduF,EAAW,GAAGvF,KACduF,EAAW,GAAGvF,KAKd,yBAAK+G,UAAU,OACb,kBAACC,EAAA,EAAD,KACE,kBAAClJ,EAAD,MACA,kBAACe,EAAD,CAAWK,kBAAmBwH,EAAYlH,eAAgB2G,IAC1D,kBAACpI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,MAAO,CAAEoE,gBAAiB,YACpC,kBAACQ,EAAD,CACEnE,QAASyG,EACTrC,cAAe2D,EACf1D,SAlDZ,SAAsBiE,EAAG/G,GASvB,IAAIgH,EAAQ,eAAQlC,GAChB3F,EAAMa,EAAK2D,YAEfqD,EAAW5B,OAAO6B,OAAOD,EAAd5B,OAAA,IAAAA,CAAA,GAA2BjG,EAAMa,EAAKuE,QACjDQ,EAAkBiC,IAsCRjE,QAASsC,IAEX,kBAAC,EAAD,CAAQ1F,QAjClB,WAEEsF,GADe,MAiCP,0DAAgCH,EAAeH,YAC/C,yDAA+BG,EAAeF,WAEhD,kBAAC9G,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACwB,EAAD,CACEC,SAAU6F,EACV5F,QAASqF,EACTpF,aAAcsF,EACdrF,QArCZ,WAEEsF,GADe,IAqCLxG,QAASyG,SC3OHgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAStE,SAASuE,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d19ff25f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport function Header() {\n  return (\n    <div>\n      <Row>\n        <Col sm={12}>\n          <h2\n            style={{\n              margin: \"20px 0px\",\n              textAlign: \"left\",\n              color: \"#7F6A93\",\n              borderBottom: \"0.5px solid #E8E8EA\",\n              paddingBottom: \"20px\"\n            }}\n          >\n            Advertising Data ETL-V Challenge\n          </h2>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function List(props) {\n  return (\n    <li>\n      {props.message}\n      <span style={props.styling}>{props.columns}s</span>\n    </li>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { List } from \"./List.js\";\n\nexport function Subheader(props) {\n  const message = \"Select zero to N \";\n  //const columnsArray= [\"Datasources\", \"Campaigns\", \"Impressions\", \"Clicks\", \"Date\"];\n  const italics = { fontStyle: \"italic\" };\n\n  const listItems = [];\n  for (\n    let listItem = 0;\n    listItem < props.dimensionsColumns.length;\n    listItem++\n  ) {\n    listItems.push(\n      <List\n        message={message}\n        columns={props.dimensionsColumns[listItem]}\n        styling={italics}\n        key={listItem}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col sm={12}>\n          <div\n            style={{\n              margin: \"20px 0px\",\n              textAlign: \"left\",\n              color: \"#828282\",\n              fontSize: \"15px\",\n              borderBottom: \"0.5px solid #E8E8EA\",\n              paddingBottom: \"20px\"\n            }}\n          >\n            <ul style={{ paddingLeft: \"20px\" }}>{listItems}</ul>\n            <p style={{ fontSize: \"12px\" }}>[where zero means \"All\"]</p>\n            <p>\n              Hitting \"Apply\" filters the chart to show a timeseries for both{\" \"}\n              <span style={italics}>{props.metricsColumns[0]}</span> and{\" \"}\n              <span style={italics}>{props.metricsColumns[1]}</span> for given{\" \"}\n              <span style={italics}>{props.dimensionsColumns[0]}s</span> and{\" \"}\n              <span style={italics}>{props.dimensionsColumns[1]}s</span> -\n              logical AND\n            </p>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport _ from \"lodash\";\n\nexport function Chart({ coreData, filters, applyFilters, onClick, styling }) {\n  console.log(coreData.Date);\n  console.log(filters);\n  console.log(applyFilters);\n\n  let generatedOptions = generateOptions(coreData, filters, applyFilters);\n\n  console.log(\"generatedOptions\", generatedOptions);\n  /*const options = {\n    chart: {\n    type: 'spline'\n    },\n    xAxis: {\n      categories: generatedOptions,\n     \n    },    \n    yAxis:[{ // Primary yAxis\n        labels: {\n            format: '{value}',\n            \n            style: {\n                color: Highcharts.getOptions().colors[0]\n            },\n        },\n        title: {\n            text: 'Clicks',\n            style: {\n                color: Highcharts.getOptions().colors[0]\n            }\n        },\n        opposite: false\n\n    }, { // Secondary yAxis\n        gridLineWidth: 0,\n        title: {\n            text: 'Impressions',\n            style: {\n                color: Highcharts.getOptions().colors[1]\n            }\n        },\n        labels: {\n            format: '{value}',\n            style: {\n                color: Highcharts.getOptions().colors[1]\n            }\n        },\n       opposite: true\n    }, ],\n\n    title: {\n      text: 'Datasources', \n      align: 'left'\n    },\n    series: [\n    { \n        name: \"Clicks\",\n        \n        data: [12, 4, 3, 4, 4]\n      },\n   \n      { \n        name: \"Impressions\",\n        yAxis: 1,\n        \n        data: [10, 20, 30, 40, 30]\n      },\n   ]\n  };*/\n\n  return (\n    <div>\n      <Row>\n        <Col sm={10}>\n          <h2 style={styling}>Chart</h2>\n        </Col>\n        <Col sm={2}>\n          <button\n            type=\"submit\"\n            style={{\n              backgroundColor: \"#8DA1B9\",\n              color: \"white\",\n              borderRadius: \"2px\",\n              width: \"80px\",\n              padding: \"5px 0px\",\n              position: \"left\",\n              marginTop: \"10px\",\n              position: \"absolute\",\n              right: 0,\n              bottom: 0\n            }}\n          >\n            <span onClick={onClick}>Reset</span>\n          </button>\n        </Col>\n      </Row>\n      <HighchartsReact highcharts={Highcharts} options={generatedOptions} />\n    </div>\n  );\n}\n\nfunction generateOptions(data, filter, apply) {\n  let groupByDate = _.groupBy(data, \"Date\");\n  console.log(\"groupByDate\", groupByDate);\n  let uniqueDates = _.keys(groupByDate);\n  console.log(\"uniqueDates\", uniqueDates);\n  let impressionsArray = [];\n  let clicksArray = [];\n  for (let dayEntry = 0; dayEntry < uniqueDates.length; dayEntry++) {\n    let totalImpressions = 0;\n    let totalClicks = 0;\n    for (\n      let dataRow = 0;\n      dataRow < groupByDate[uniqueDates[dayEntry]].length;\n      dataRow++\n    ) {\n      console.log(\"dayEntry\", dayEntry, \"dataRow\", dataRow);\n      //debugger;\n      totalImpressions =\n        totalImpressions +\n        groupByDate[uniqueDates[dayEntry]][dataRow].Impressions;\n      totalClicks =\n        totalClicks + groupByDate[uniqueDates[dayEntry]][dataRow].Clicks;\n    }\n    impressionsArray.push(totalImpressions);\n    clicksArray.push(totalClicks);\n  }\n  console.log(\"impressionsArray\", impressionsArray);\n  console.log(\"clicksArray\", clicksArray);\n\n  let groupByCampaign = _.groupBy(data, \"Campaign\");\n  console.log(\"groupByCampaign\", groupByCampaign);\n\n  let groupByDatasource = _.groupBy(data, \"Datasource\");\n  console.log(\"groupByDatasource\", groupByDatasource);\n\n  const options = {\n    chart: {\n      type: \"spline\"\n    },\n    xAxis: {\n      categories: uniqueDates\n    },\n    yAxis: [\n      {\n        // Primary yAxis\n        labels: {\n          format: \"{value}\",\n\n          style: {\n            color: Highcharts.getOptions().colors[0]\n          }\n        },\n        title: {\n          text: \"Clicks\",\n          style: {\n            color: Highcharts.getOptions().colors[0]\n          }\n        },\n        opposite: false\n      },\n      {\n        // Secondary yAxis\n        gridLineWidth: 0,\n        title: {\n          text: \"Impressions\",\n          style: {\n            color: Highcharts.getOptions().colors[1]\n          }\n        },\n        labels: {\n          format: \"{value}\",\n          style: {\n            color: Highcharts.getOptions().colors[1]\n          }\n        },\n        opposite: true\n      }\n    ],\n\n    title: {\n      text: \"Datasources\",\n      align: \"left\"\n    },\n    series: [\n      {\n        name: \"Clicks\",\n\n        data: clicksArray\n      },\n\n      {\n        name: \"Impressions\",\n        yAxis: 1,\n\n        data: impressionsArray\n      }\n    ]\n  };\n\n  return options;\n}\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\n\nexport function Filter({ styling, filterColumns, onChange, dataSet }) {\n  const [selectedValues, setSelectedValues] = useState();\n  //console.log(\"filterColumns\", filterColumns);\n  const columns = [];\n\n  /*for(let item=0;item<filterColumns.length;item++ ){\n    //debugger;\n    columns.push(<button key={item} name={filterColumns[item]} onClick={()=>onclick(filterColumns[item])}>{filterColumns[item]}</button>)\n    console.log(\"columns\", columns);\n  };\n  console.log(\"columns\", columns);*/\n\n  /*const options = [\n  { key: 'angular', text: 'Angular', value: 'angular', name: \"Angular\"},\n  { key: 'css', text: 'CSS', value: 'css' },\n  { key: 'design', text: 'Graphic Design', value: 'design' },\n  { key: 'ember', text: 'Ember', value: 'ember' },\n  { key: 'html', text: 'HTML', value: 'html' },\n  { key: 'ia', text: 'Information Architecture', value: 'ia' },\n  { key: 'javascript', text: 'Javascript', value: 'javascript' },\n  { key: 'mech', text: 'Mechanical Engineering', value: 'mech' },\n  { key: 'meteor', text: 'Meteor', value: 'meteor' },\n  { key: 'node', text: 'NodeJS', value: 'node' },\n  { key: 'plumbing', text: 'Plumbing', value: 'plumbing' },\n  { key: 'python', text: 'Python', value: 'python' },\n  { key: 'rails', text: 'Rails', value: 'rails' },\n  { key: 'react', text: 'React', value: 'react' },\n  { key: 'repair', text: 'Kitchen Repair', value: 'repair' },\n  { key: 'ruby', text: 'Ruby', value: 'ruby' },\n  { key: 'ui', text: 'UI Design', value: 'ui' },\n  { key: 'ux', text: 'User Experience', value: 'ux' },\n];*/\n\n  const styleLink = document.createElement(\"link\");\n  styleLink.rel = \"stylesheet\";\n  styleLink.href =\n    \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\n  document.head.appendChild(styleLink);\n\n  /*function handleChange(e, data){\n  setSelectedValues(data.value);\n  console.log(data.value)\n}**/\n\n  for (let item = 0; item < filterColumns.length; item++) {\n    //debugger;\n    const generatedOptions = [];\n    const genOptions = generateOptions(filterColumns[item], dataSet);\n    //console.log(\"genOptions\", genOptions);\n    columns.push(\n      <div>\n        <p style={{ textAlign: \"left\", color: \"#828282\", marginTop: \"20px\" }}>\n          {filterColumns[item]}\n        </p>\n        <Dropdown\n          style={styleLink}\n          placeholder={filterColumns[item]}\n          fluid\n          multiple\n          selection\n          options={genOptions}\n          onChange={onChange}\n          style={{ marginTop: \"5px\" }}\n        />\n      </div>\n    );\n    //console.log(\"columns\", columns);\n  }\n  //console.log(\"columns\", columns);\n\n  return (\n    <div>\n      <h2 style={styling}>Filters</h2>\n      {columns}\n\n      {/* <Dropdown style={styleLink} placeholder='Skills' fluid multiple selection options={options} onChange={onChange} />\n       */}\n    </div>\n  );\n}\n\nfunction generateOptions(inputItem, inputDataSet) {\n  let uniqueValues = [];\n  for (let entry = 0; entry < inputDataSet.length; entry++) {\n    if (!uniqueValues.includes(inputDataSet[entry][inputItem])) {\n      uniqueValues.push(inputDataSet[entry][inputItem]);\n      //console.log(\"uniqueValues\", uniqueValues);\n    }\n  }\n  let newOptions = [];\n  for (let optionItem = 0; optionItem < uniqueValues.length; optionItem++) {\n    let optionRow = {\n      key: uniqueValues[optionItem],\n      text: uniqueValues[optionItem],\n      value: uniqueValues[optionItem]\n    };\n    newOptions.push(optionRow);\n    //console.log(\"optionRow\", optionRow);\n  }\n  //console.log(\"newOptions\", newOptions)\n  return newOptions;\n}\n","import React from \"react\";\nimport \"./Button.css\";\n\nexport function Button({ onClick }) {\n  return (\n    <button\n      type=\"submit\"\n      style={{\n        backgroundColor: \"#8DA1B9\",\n        color: \"white\",\n        borderRadius: \"2px\",\n        width: \"80px\",\n        padding: \"5px 0px\",\n        position: \"left\",\n        marginTop: \"10px\"\n      }}\n    >\n      <span onClick={onClick}>Apply</span>\n    </button>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport { Header } from \"./components/Header.js\";\nimport { Subheader } from \"./components/Subheader.js\";\n//import Multiselect from 'react-bootstrap-multiselect';\nimport { Chart } from \"./components/Chart.js\";\nimport { Filter } from \"./components/Filter.js\";\nimport { Button } from \"./components/Button.js\";\nimport _ from \"lodash\";\n\nfunction App() {\n  const [data, setData] = useState([\n    {\n      Date: \"23.01.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Like Ads\",\n      AdGroup: \"A\",\n      Clicks: 274,\n      Impressions: 1979\n    },\n    {\n      Date: \"08.02.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Like Ads\",\n      AdGroup: \"A\",\n      Clicks: 274,\n      Impressions: 1979\n    },\n    {\n      Date: \"01.01.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Like Ads\",\n      AdGroup: \"A\",\n      Clicks: 274,\n      Impressions: 1979\n    },\n    {\n      Date: \"01.01.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Offer Campaigns - Conversions\",\n      AdGroup: \"A\",\n      Clicks: 245,\n      Impressions: 764627\n    },\n    {\n      Date: \"01.01.2019\",\n      Datasource: \"Google Adwords\",\n      Campaign: \"B2B - Leads\",\n      AdGroup: \"A\",\n      Clicks: 7,\n      Impressions: 444\n    },\n    {\n      Date: \"01.01.2019\",\n      Datasource: \"Google Adwords\",\n      Campaign: \"GDN Prospecting - App - Prio 1 Offer\",\n      AdGroup: \"B\",\n      Clicks: 16,\n      Impressions: 12535\n    },\n    {\n      Date: \"20.01.2019\",\n      Datasource: \"Google Adwords\",\n      Campaign: \"GDN Prospecting - App - Prio 1 Offer\",\n      AdGroup: \"A\",\n      Clicks: 250,\n      Impressions: 10535\n    },\n    {\n      Date: \"01.03.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Offer Campaigns - Conversions\",\n      AdGroup: \"A\",\n      Clicks: 245,\n      Impressions: 764627\n    },\n    {\n      Date: \"01.04.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Offer Campaigns - Conversions\",\n      AdGroup: \"A\",\n      Clicks: 245,\n      Impressions: 764627\n    },\n    {\n      Date: \"01.05.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Offer Campaigns - Conversions\",\n      AdGroup: \"A\",\n      Clicks: 245,\n      Impressions: 764627\n    },\n    {\n      Date: \"01.06.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Offer Campaigns - Conversions\",\n      AdGroup: \"A\",\n      Clicks: 245,\n      Impressions: 764627\n    },\n    {\n      Date: \"01.07.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Offer Campaigns - Conversions\",\n      AdGroup: \"A\",\n      Clicks: 245,\n      Impressions: 764627\n    },\n    {\n      Date: \"01.08.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Offer Campaigns - Conversions\",\n      AdGroup: \"A\",\n      Clicks: 245,\n      Impressions: 764627\n    },\n    {\n      Date: \"01.09.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Offer Campaigns - Conversions\",\n      AdGroup: \"A\",\n      Clicks: 245,\n      Impressions: 764627\n    },\n    {\n      Date: \"01.10.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Offer Campaigns - Conversions\",\n      AdGroup: \"A\",\n      Clicks: 245,\n      Impressions: 764627\n    },\n    {\n      Date: \"01.11.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Offer Campaigns - Conversions\",\n      AdGroup: \"A\",\n      Clicks: 245,\n      Impressions: 764627\n    },\n    {\n      Date: \"01.12.2019\",\n      Datasource: \"Facebook Ads\",\n      Campaign: \"Offer Campaigns - Conversions\",\n      AdGroup: \"A\",\n      Clicks: 245,\n      Impressions: 764627\n    }\n  ]);\n  const [selectedColumns, setColumns] = useState([]);\n  /*const [selectedValues, setSelectedValues] = useState([]);\n  const [selectedValues2, setSelectedValues2] = useState([]);*/\n  const [selectedValues, setSelectedValues] = useState({});\n  const [useFilters, setUseFilters] = useState(false);\n\n  const styles = {\n    margin: \"30px 0px\",\n    textAlign: \"left\",\n    color: \"#8DA1B9\"\n  };\n\n  //console.log(JSON.stringify(data));\n\n  const tableColumns = getColumns(data);\n\n  //console.log(\"tableColumns\", tableColumns);\n\n  const dataWithDateFormat = formatDate(data);\n  //console.log(\"dataWithDateFormat\", dataWithDateFormat);\n  const sortedData = sortArray(dataWithDateFormat);\n  //console.log(\"sorted data\", sortedData);\n\n  const metrics = getMetrics(sortedData, tableColumns);\n  //console.log(\"metrics\", metrics);\n  const dimensions = getDimensions(sortedData, tableColumns);\n  //console.log(\"dimension\", dimensions);\n  const dates = getDates(sortedData, tableColumns);\n  //console.log(\"dates\", dates);\n\n  //const dataMulti = [{ value:'One', selected:true }, { value: 'Two' }, { value:'Three' }]\n\n  function handleChange(e, data) {\n    //console.log(\"e\", e);\n    //console.log(\"data\", data);\n    //console.log(\"data/placeholder\", data.placeholder);\n    /*if (data.placeholder ==\"Datasource\"){\n      setSelectedValues(data.value);\n    } else if (data.placeholder ==\"Campaign\"){\n      setSelectedValues2(data.value);\n    }*/\n    let newState = { ...selectedValues };\n    let key = data.placeholder;\n\n    newState = Object.assign(newState, { [key]: data.value });\n    setSelectedValues(newState);\n    //console.log (\"selectedValues\", selectedValues);\n\n    //console.log(\"newState\", newState);\n\n    //console.log(\"data.value\", data.value);\n  }\n  function handleClick() {\n    let newState = true;\n    setUseFilters(newState);\n  }\n\n  function handleReset() {\n    let newState = false;\n    setUseFilters(newState);\n  }\n  //console.log(\"useFilters\", useFilters);\n\n  const testDates = [\n    sortedData[0].Date,\n    sortedData[1].Date,\n    sortedData[2].Date,\n    sortedData[3].Date,\n    sortedData[4].Date\n  ];\n\n  //console.log(\"selected values\", selectedValues);\n  return (\n    <div className=\"App\">\n      <Container>\n        <Header />\n        <Subheader dimensionsColumns={dimensions} metricsColumns={metrics} />\n        <Row>\n          <Col sm={4} style={{ backgroundColor: \"#EFF2F1\" }}>\n            <Filter\n              styling={styles}\n              filterColumns={dimensions}\n              onChange={handleChange}\n              dataSet={sortedData}\n            />\n            <Button onClick={handleClick} />\n            <p>Selected values Datasource: {selectedValues.Datasource}</p>\n            <p>Selected values Campaigns: {selectedValues.Campaign}</p>\n          </Col>\n          <Col sm={8}>\n            <Chart\n              coreData={sortedData}\n              filters={selectedValues}\n              applyFilters={useFilters}\n              onClick={handleReset}\n              styling={styles}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction formatDate(input) {\n  const dataWithDate = [];\n  for (let row = 0; row < input.length; row++) {\n    const entry = { ...input[row] };\n    //console.log(\"entry\", entry)\n    const oldDate = input[row].Date;\n    //console.log(oldDate);\n    const year = oldDate.slice(6, 10);\n    //console.log(\"year\", year);\n    const month = oldDate.slice(3, 5);\n    //console.log(\"month\", month);\n    const day = oldDate.slice(0, 2);\n    //console.log(\"day\", day);\n    const newDate = year + \"-\" + month + \"-\" + day;\n    //console.log(\"newDate\", newDate);\n    const dateFormatted = new Date(newDate);\n    //console.log(\"dateFormatted\",dateFormatted);\n    entry.Date = dateFormatted;\n    //console.log(\"entryPOST\", entry);\n    dataWithDate.push(entry);\n  }\n  //console.log(\"dataWithDate\", dataWithDate);\n  //const output=_.sortBy(dataWithDate, [\"Date\", \"Datasource\", \"Campaign\"]);\n\n  //console.log(\"dat OUTPUT\", output);\n  return dataWithDate;\n}\n\nfunction sortArray(input) {\n  const output = _.sortBy(input, [\"Date\", \"Datasource\"]);\n  return output;\n}\n\nfunction getColumns(input) {\n  const output = Object.keys(input[0]);\n  return output;\n}\n\nfunction getDimensions(inputData, inputColumns) {\n  const output = [];\n  for (let item = 0; item < inputColumns.length; item++) {\n    //debugger;\n    const col = inputColumns[item];\n    //console.log(\"col\",col);\n    //console.log(\"inputData[0].col\", inputData[0][col])\n    if (_.isString(inputData[0][col])) {\n      output.push(col);\n    }\n  }\n  return output;\n}\nfunction getDates(inputData, inputColumns) {\n  const output = [];\n  for (let item = 0; item < inputColumns.length; item++) {\n    //debugger;\n    const col = inputColumns[item];\n    //console.log(\"col\",col);\n    //console.log(\"inputData[0].col\", inputData[0][col])\n    if (_.isDate(inputData[0][col])) {\n      output.push(col);\n    }\n  }\n  return output;\n}\n\nfunction getMetrics(inputData, inputColumns) {\n  const output = [];\n  for (let item = 0; item < inputColumns.length; item++) {\n    //debugger;\n    const col = inputColumns[item];\n    //console.log(\"col\",col);\n    //console.log(\"inputData[0].col\", inputData[0][col])\n    if (_.isNumber(inputData[0][col])) {\n      output.push(col);\n    }\n  }\n  return output;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}